swagger: "2.0"
info:
  title: Votek
  description: API documentation.
  
  servers:
    -url: http://localhost:8080
    description: THis is my local Server 
schemes: [http]
paths:
  

  /user/signup:
    post:
      summary: Add user to databse
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object 
            properties:
              mob:
                type: integer
              fullName:
                type: string
              email:
                type: string 
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              mobNumb:
                type: integer
              userName:
                type: string
              email:
                type: string 
              token:
                type: string 
        '401':
          description: OK
          schema:
            type: string
            example: "Please enter a valid 6 digit OTP." 
          
  
  /auth/signin :
    post:
      summary: User logging in.
      produces:
        - application/json
      consumes:
        - application/json
      parameters: 
        - in: body
          name: body
          schema:
            type: object 
            properties:
              email:
                type: string 
              password:
                type: string  
      responses:
        '200':
          description: OK
          schema:
            type: string
            example: "OTP sent successfully, Please check your email for OTP." 
             
        '401':
          description: OK
          schema:
            type: string
            example: "Please enter a valid password." 
        '404':
          description: OK
          schema:
            type: string
            example: "The account you mentioned does not exist. Please try with correct email address." 

  
  /firebase/create-poll :
    post:
      summary: "Create a new poll"
      description: "This API allows an admin to create a new poll with questions and options"
      parameters:
        - name: "pollName"
          in: "body"
          description: "Name of the poll"
          required: true
          schema:
            type: "string"
        - name: "questions"
          in: "body"
          description: "Array of questions with options"
          required: true
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                question:
                  type: "string"
                maxSelections:
                  type: "number"
                options:
                  type: "array"
                  items:
                    type: "string"
        - name: "pollStatus"
          in: "body"
          description: "Status of the poll (active or inactive)"
          required: true
          schema:
            type: "string"
        - name: "pollCreatedAt"
          in: "body"
          description: "Creation date of the poll"
          required: true
          schema:
            type: "string"
        - name: "pollEndsAt"
          in: "body"
          description: "End date of the poll"
          required: true
          schema:
            type: "string"
        - name: "Authorization"
          in: "header"
          description: "Bearer token for authentication"
          required: true
          type: "string"
      responses:
        201:
          description: "Poll created successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
              pollData:
                type: "object"
                properties:
                  pollName:
                    type: "string"
                  pollId:
                    type: "string"
                  questions:
                    type: "object"
                  pollStatus:
                    type: "string"
                  adminId:
                    type: "string"
                  pollCreatedAt:
                    type: "string"
                  pollEndsAt:
                    type: "string"
                  pollUrl:
                    type: "string"
              url:
                type: "string"
        400:
          description: "Invalid request"
        401:
          description: "Unauthorized access"
        500:
          description: "Failed to create poll"

  firebase/vote:
    post:
      summary: "Record a vote in a poll"
      parameters:
        - name: "pollId"
          in: "query"
          description: "The ID of the poll in which the vote is being recorded"
          required: true
          type: "string"
        - name: "selectedAnswers"
          in: "query"
          description: "An array of selected answers, where each element contains questionId and optionId"
          required: true
          type: "array"
          items:
            type: "object"
            properties:
              questionId:
                type: "string"
              optionId:
                type: "string"
        - name: "userId"
          in: "query"
          description: "The ID of the user who is recording the vote"
          required: true
          type: "string"
      responses:
        "200":
          description: "Vote recorded successfully"
        "400":
          description: "User not found"
        "500":
          description: "Error recording vote"

    
  firebase/live-polls:
    get:
      summary: Get live polls for admin
      description: Returns an array of live polls for the admin with the given adminId.
      parameters:
        - name: adminId
          in: query
          description: The ID of the admin for which to retrieve live polls.
          required: true
          type: string
      responses:
        200:
          schema:
            type: "object"
            properties: 
              pollData:
                type: "object"
                properties:
                  pollName:
                    type: "string"
                  pollId:
                    type: "string"
                  questions:
                    type: "object"
                  pollStatus:
                    type: "string"
                  adminId:
                    type: "string"
                  pollCreatedAt:
                    type: "string"
                  pollEndsAt:
                    type: "string"
                  pollUrl:
                    type: "string" 
        400:
          description: Bad Request
        500:
          description: Internal Server Error